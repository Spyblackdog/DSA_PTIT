#include <bits/stdc++.h>

using namespace std;

vector <int> v[100005];
int color[100005];

bool bfs(int u){
	queue <int> q;
	q.push(u);
	color[u] = 0;
	while (!q.empty()){
		int num = q.front();
		q.pop();
		for (auto x : v[num]){
			if (color[x] == -1){
				color[x] = 1 - color[num];
				q.push(x);
			}else if (color[x] == color[num]){
				return false;
			}
		}
	}
	
	return true;
}

int main(){
	int t;
	cin>>t;
	while (t--){
		int n,m;
		cin>>n>>m;
		for (int i=1;i<=m;i++){
			int x,y;
			cin>>x>>y;
			v[x].push_back(y);
			v[y].push_back(x);
		}
		memset(color,-1,sizeof(color));
		bool check = true;
		for (int i=1;i<=n;i++){
			if (color[i] == -1){
				if (!bfs(i)){
					check = false;
					break;
				}
			}
		}
		if (check)
			cout<<"YES";
		else
			cout<<"NO";
		cout<<endl;
		for (int i=1;i<=n;i++)
			v[i].clear();
	}
	
	return 0;
}
