#include <bits/stdc++.h>

using namespace std;

vector <int> v[100005];
bool ok[100005];

void dfs(int u){
	ok[u] = true;
	for (auto x : v[u]){
		if (!ok[x]){
			ok[x] = true;
			dfs(x);
		}
	}
}

bool dfs2(int u,int par){
	ok[u] = true;
	for (auto x : v[u]){
		if (!ok[x]){
			if (dfs2(x,u))
				return true;
		}else if (x != par){
			return true;
		}
	}
	return false;
}

int main(){
	int t;
	cin>>t;
	while (t--){
		int n;
		cin>>n;
		for (int i=1;i<n;i++){
			int x,y;
			cin>>x>>y;
			v[x].push_back(y);
		}
		memset(ok,false,sizeof(ok));
		int cnt = 0;
		for (int i=1;i<=n;i++){
			if (!ok[i]){
				dfs(i);
				cnt++;
			}
		}
		memset(ok,false,sizeof(ok));
		bool check = false;
		for (int i=1;i<=n;i++){
			if (!ok[i]){
				if (dfs2(i,0)){
					check = true;
					break;
				}
			}
		}
		if (cnt == 1 && !check){
			cout<<"YES";
		}else{
			cout<<"NO";
		}
		cout<<endl;
		for (int i=1;i<=n;i++)
			v[i].clear();
	}
	
	return 0;
}
