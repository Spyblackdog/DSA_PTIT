#include <bits/stdc++.h>

using namespace std;

vector <int> v[100005];
bool ok[100005];
vector <pair<int,int>> dscanh;

void dfs(int u){
	ok[u] = true;
	for (auto s : v[u]){
		if (!ok[s]){
			ok[s] = true;
			dfs(s);
		}
	}
}

void dfs2(int u,int x,int y){
	ok[u] = true;
	for (auto s : v[u]){
		if ((u == x && s == y) || (u == y && s == x))
			continue;
		else{
			if (!ok[s]){
				ok[s] = true;
				dfs2(s,x,y);
			}
		}
	}
}

int tplt(int n){
	int cnt = 0;
	for (int i=1;i<=n;i++){
		if(!ok[i]){
			dfs(i);
			cnt++;
		}
	}
	
	return cnt;
}

void check(int n){
	int res = tplt(n);
	vector <pair<int,int>> cau;
	for (auto it : dscanh){
		int x = it.first;
		int y = it.second;
		memset(ok,false,sizeof(ok));
		int cnt = 0;
		for (int j=1;j<=n;j++){
			if (!ok[j]){
				cnt++;
				dfs2(j,x,y);
			}
		}
		if (cnt > res){
			if (x > y)
				swap(x,y);
			cau.push_back({x,y});
		}
	}
	sort(cau.begin(),cau.end());
	for (auto k : cau)
		cout<<k.first<<" "<<k.second<<" ";
}

int main(){
	int t;
	cin>>t;
	while (t--){
		dscanh.clear();
		int n,m;
		cin>>n>>m;
		for (int i=1;i<=m;i++){
			int x,y;
			cin>>x>>y;
			v[x].push_back(y);
			v[y].push_back(x);
			dscanh.push_back({x,y});
		}
		memset(ok,false,sizeof(ok));
		check(n);
		for (int i=1;i<=n;i++)
			v[i].clear();
		cout<<endl;
	}
	
	return 0;
}
