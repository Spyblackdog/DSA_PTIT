#include <bits/stdc++.h>

using namespace std;

struct node{
    int data;
    node *next;
};

typedef struct node node;

node *makenode(int x){
    node *newnode = new node();
    newnode -> data = x;
    newnode -> next = NULL;

    return newnode;
}

int dem(node *head){
    int cnt = 0;
    while (head != NULL){
        cnt++;
        head = head -> next;
    }

    return cnt;
}

void duyet(node *head){
    if (head == NULL)
        cout<<"DSLK rong"<<endl;
    else{
        while (head != NULL){
            cout<<head -> data<<" ";
            head = head -> next;
        }
        cout<<endl;
    }
}

void themF(node* &head,int x){
    node *newnode = makenode(x);
    newnode -> next = head;
    head = newnode;
}

void themL(node* &head,int x){
    node* temp = head;
    node *newnode = makenode(x);
    while (temp -> next != NULL){
        temp = temp -> next;
    }
    temp -> next = newnode;
}

void themP(node *head, int x, int k){
    int n = dem(head);
    if (k < 1 || k > n + 1)
        return;
    if (k == 1)
        themF(head,x);
    else if (k == n + 1){
        themL(head,x);
    }else{
        node *temp = head;
        node *newnode = makenode(x);
        int res = 0;
        while (res < k - 1){
            temp = temp -> next;
            res++;
        }
        newnode -> next = temp -> next;
        temp -> next = newnode;
    }
}

void xoaF(node* &head){
    node *temp = head;
    head = head -> next;
    delete temp;
}

void xoaL(node* &head){
    node *temp = head;
    while (temp -> next != NULL){
        temp = temp -> next;
    }
    node *temp2 = temp;
    temp -> next = NULL;
    delete temp2;
}

void xoaP(node* &head,int k){
    int n = dem(head);
    if (head == NULL)
        return;
    if (k < 1 || k > n + 1)
        return;
    else if (k == 1){
        xoaF(head);
    }else if (k == n + 1){
        xoaL(head);
    }else{
        node *temp = head;
        int res = 0;
        node *temp2 = temp;
        while (res < k - 1){
            temp2 = temp;
            temp = temp -> next;
            res++;
        }
        temp2 -> next = temp -> next;
        delete temp;    
    }
}

int main(){
    node *head = NULL;
    for (int i=1;i<=5;i++)
        themF(head,i);
    themL(head,10);
    themP(head,19,3);
    duyet(head);

    return 0;
}
