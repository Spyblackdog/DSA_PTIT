#include <bits/stdc++.h>

using namespace std;

vector <int> v[100005];
bool ok[100005];
int n,m;
bool check;

void dfs(int u,int cnt){
	if (cnt == n)
		check = true;
	ok[u] = true;
	for (auto x : v[u]){
		if (!ok[x])
			dfs(x,cnt+1);
	}
}

int hamilton(int n){
	for (int i=1;i<=n;i++){
		memset(ok,false,sizeof(ok));
		check = false;
		dfs(i,1);
		if (check)
			return 1;
	}
	
	return 0;
}

int main(){
	int t;
	cin>>t;
	while (t--){
		cin>>n>>m;
		for (int i=1;i<=m;i++){
			int x,y;
			cin>>x>>y;
			v[x].push_back(y);
			v[y].push_back(x);
		}
		cout<<hamilton(n)<<endl;
		for (int i=1;i<=n;i++)
			v[i].clear();
	}
	
	
	return 0;
}
