#include <bits/stdc++.h>

using namespace std;

bool ok[10005];
vector <int> v[10005];
int parent[100005];

void dfs(int u){
	ok[u] = true;
	for (auto x : v[u]){
		if (!ok[x]){
			parent[x] = u;
			dfs(x);
		}
	}
}

void check(int x,int y){
	memset(ok,false,sizeof(ok));
	dfs(x);
	if (!ok[x])
		cout<<-1;
	else{
		vector <int> p;
		while (y != x){
			p.push_back(y);
			y = parent[y];
		}
		p.push_back(x);
		reverse(p.begin(),p.end());
		for (auto q : p)
			cout<<q<<" ";
	}
	cout<<endl;
}

int main(){
	int t;
	cin>>t;
	while (t--){
		int n,m,z,c;
		cin>>n>>m>>z>>c;
		for (int i=1;i<=m;i++){
			int x,y;
			cin>>x>>y;
			v[x].push_back(y);
			v[y].push_back(x);
		}
		check(z,c);
		for (int i=1;i<=n;i++)
		    v[i].clear();
	}
	
	return 0;
}
